"""
    estela API v1.0 Documentation

    estela API Swagger Specification  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401

from estela_client.api_client import ApiClient, Endpoint as _Endpoint
from estela_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types,
)
from estela_client.model.delete_job_data import DeleteJobData
from estela_client.model.inline_response2005 import InlineResponse2005
from estela_client.model.inline_response2006 import InlineResponse2006
from estela_client.model.spider_job import SpiderJob
from estela_client.model.spider_job_create import SpiderJobCreate
from estela_client.model.spider_job_update import SpiderJobUpdate

class SpiderJobsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.api_projects_spiders_jobs_create_endpoint = _Endpoint(
            settings={
                "response_type": (SpiderJobCreate,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs",
                "operation_id": "api_projects_spiders_jobs_create",
                "http_method": "POST",
                "servers": None,
            },
            params_map={
                "all": [
                    "pid",
                    "sid",
                    "data",
                    "_async",
                ],
                "required": [
                    "pid",
                    "sid",
                    "data",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "pid": (str,),
                    "sid": (str,),
                    "data": (SpiderJobCreate,),
                    "_async": (bool,),
                },
                "attribute_map": {
                    "pid": "pid",
                    "sid": "sid",
                    "_async": "async",
                },
                "location_map": {
                    "pid": "path",
                    "sid": "path",
                    "data": "body",
                    "_async": "query",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": ["application/json"],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_data_delete_endpoint = _Endpoint(
            settings={
                "response_type": (DeleteJobData,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs/{jid}/data/delete",
                "operation_id": "api_projects_spiders_jobs_data_delete",
                "http_method": "POST",
                "servers": None,
            },
            params_map={
                "all": [
                    "jid",
                    "pid",
                    "sid",
                    "type",
                ],
                "required": [
                    "jid",
                    "pid",
                    "sid",
                    "type",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "jid": (str,),
                    "pid": (str,),
                    "sid": (str,),
                    "type": (str,),
                },
                "attribute_map": {
                    "jid": "jid",
                    "pid": "pid",
                    "sid": "sid",
                    "type": "type",
                },
                "location_map": {
                    "jid": "path",
                    "pid": "path",
                    "sid": "path",
                    "type": "query",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": [],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_data_list_endpoint = _Endpoint(
            settings={
                "response_type": (InlineResponse2006,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs/{jid}/data",
                "operation_id": "api_projects_spiders_jobs_data_list",
                "http_method": "GET",
                "servers": None,
            },
            params_map={
                "all": [
                    "jid",
                    "pid",
                    "sid",
                    "page",
                    "page_size",
                    "type",
                ],
                "required": [
                    "jid",
                    "pid",
                    "sid",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "jid": (str,),
                    "pid": (str,),
                    "sid": (str,),
                    "page": (int,),
                    "page_size": (int,),
                    "type": (str,),
                },
                "attribute_map": {
                    "jid": "jid",
                    "pid": "pid",
                    "sid": "sid",
                    "page": "page",
                    "page_size": "page_size",
                    "type": "type",
                },
                "location_map": {
                    "jid": "path",
                    "pid": "path",
                    "sid": "path",
                    "page": "query",
                    "page_size": "query",
                    "type": "query",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": [],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_list_endpoint = _Endpoint(
            settings={
                "response_type": (InlineResponse2005,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs",
                "operation_id": "api_projects_spiders_jobs_list",
                "http_method": "GET",
                "servers": None,
            },
            params_map={
                "all": [
                    "pid",
                    "sid",
                    "cronjob",
                    "status",
                    "tag",
                    "page",
                    "page_size",
                ],
                "required": [
                    "pid",
                    "sid",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "pid": (str,),
                    "sid": (str,),
                    "cronjob": (float,),
                    "status": (str,),
                    "tag": (str,),
                    "page": (int,),
                    "page_size": (int,),
                },
                "attribute_map": {
                    "pid": "pid",
                    "sid": "sid",
                    "cronjob": "cronjob",
                    "status": "status",
                    "tag": "tag",
                    "page": "page",
                    "page_size": "page_size",
                },
                "location_map": {
                    "pid": "path",
                    "sid": "path",
                    "cronjob": "query",
                    "status": "query",
                    "tag": "query",
                    "page": "query",
                    "page_size": "query",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": [],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_partial_update_endpoint = _Endpoint(
            settings={
                "response_type": (SpiderJob,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs/{jid}",
                "operation_id": "api_projects_spiders_jobs_partial_update",
                "http_method": "PATCH",
                "servers": None,
            },
            params_map={
                "all": [
                    "jid",
                    "pid",
                    "sid",
                    "data",
                ],
                "required": [
                    "jid",
                    "pid",
                    "sid",
                    "data",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "jid": (int,),
                    "pid": (str,),
                    "sid": (str,),
                    "data": (SpiderJob,),
                },
                "attribute_map": {
                    "jid": "jid",
                    "pid": "pid",
                    "sid": "sid",
                },
                "location_map": {
                    "jid": "path",
                    "pid": "path",
                    "sid": "path",
                    "data": "body",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": ["application/json"],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_read_endpoint = _Endpoint(
            settings={
                "response_type": (SpiderJob,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs/{jid}",
                "operation_id": "api_projects_spiders_jobs_read",
                "http_method": "GET",
                "servers": None,
            },
            params_map={
                "all": [
                    "jid",
                    "pid",
                    "sid",
                ],
                "required": [
                    "jid",
                    "pid",
                    "sid",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "jid": (int,),
                    "pid": (str,),
                    "sid": (str,),
                },
                "attribute_map": {
                    "jid": "jid",
                    "pid": "pid",
                    "sid": "sid",
                },
                "location_map": {
                    "jid": "path",
                    "pid": "path",
                    "sid": "path",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": [],
            },
            api_client=api_client,
        )
        self.api_projects_spiders_jobs_update_endpoint = _Endpoint(
            settings={
                "response_type": (SpiderJobUpdate,),
                "auth": ["Basic"],
                "endpoint_path": "/api/projects/{pid}/spiders/{sid}/jobs/{jid}",
                "operation_id": "api_projects_spiders_jobs_update",
                "http_method": "PUT",
                "servers": None,
            },
            params_map={
                "all": [
                    "jid",
                    "pid",
                    "sid",
                    "data",
                ],
                "required": [
                    "jid",
                    "pid",
                    "sid",
                    "data",
                ],
                "nullable": [],
                "enum": [],
                "validation": [],
            },
            root_map={
                "validations": {},
                "allowed_values": {},
                "openapi_types": {
                    "jid": (int,),
                    "pid": (str,),
                    "sid": (str,),
                    "data": (SpiderJobUpdate,),
                },
                "attribute_map": {
                    "jid": "jid",
                    "pid": "pid",
                    "sid": "sid",
                },
                "location_map": {
                    "jid": "path",
                    "pid": "path",
                    "sid": "path",
                    "data": "body",
                },
                "collection_format_map": {},
            },
            headers_map={
                "accept": ["application/json"],
                "content_type": ["application/json"],
            },
            api_client=api_client,
        )
    def api_projects_spiders_jobs_create(self, pid, sid, data, **kwargs):
        """api_projects_spiders_jobs_create  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_create(pid, sid, data, async_req=True)
        >>> result = thread.get()

        Args:
            pid (str):
            sid (str):
            data (SpiderJobCreate):

        Keyword Args:
            _async (bool): True if this job is async.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            SpiderJobCreate
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        kwargs["data"] = data
        return self.api_projects_spiders_jobs_create_endpoint.call_with_http_info(
            **kwargs
        )
    def api_projects_spiders_jobs_data_delete(self, jid, pid, sid, type, **kwargs):
        """api_projects_spiders_jobs_data_delete  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_data_delete(jid, pid, sid, type, async_req=True)
        >>> result = thread.get()

        Args:
            jid (str):
            pid (str):
            sid (str):
            type (str): Spider job data type.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            DeleteJobData
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["jid"] = jid
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        kwargs["type"] = type
        return self.api_projects_spiders_jobs_data_delete_endpoint.call_with_http_info(
            **kwargs
        )
    def api_projects_spiders_jobs_data_list(self, jid, pid, sid, **kwargs):
        """api_projects_spiders_jobs_data_list  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_data_list(jid, pid, sid, async_req=True)
        >>> result = thread.get()

        Args:
            jid (str):
            pid (str):
            sid (str):

        Keyword Args:
            page (int): A page number within the paginated result set.. [optional]
            page_size (int): Number of results to return per page.. [optional]
            type (str): Spider job data type.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            InlineResponse2006
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["jid"] = jid
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        return self.api_projects_spiders_jobs_data_list_endpoint.call_with_http_info(
            **kwargs
        )
    def api_projects_spiders_jobs_list(self, pid, sid, **kwargs):
        """api_projects_spiders_jobs_list  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_list(pid, sid, async_req=True)
        >>> result = thread.get()

        Args:
            pid (str):
            sid (str):

        Keyword Args:
            cronjob (float): Related cron job.. [optional]
            status (str): Job status.. [optional]
            tag (str): Job tag.. [optional]
            page (int): A page number within the paginated result set.. [optional]
            page_size (int): Number of results to return per page.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            InlineResponse2005
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        return self.api_projects_spiders_jobs_list_endpoint.call_with_http_info(
            **kwargs
        )
    def api_projects_spiders_jobs_partial_update(self, jid, pid, sid, data, **kwargs):
        """api_projects_spiders_jobs_partial_update  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_partial_update(jid, pid, sid, data, async_req=True)
        >>> result = thread.get()

        Args:
            jid (int): A unique integer value identifying this job.
            pid (str):
            sid (str):
            data (SpiderJob):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            SpiderJob
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["jid"] = jid
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        kwargs["data"] = data
        return (
            self.api_projects_spiders_jobs_partial_update_endpoint.call_with_http_info(
                **kwargs
            )
        )
    def api_projects_spiders_jobs_read(self, jid, pid, sid, **kwargs):
        """api_projects_spiders_jobs_read  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_read(jid, pid, sid, async_req=True)
        >>> result = thread.get()

        Args:
            jid (int): A unique integer value identifying this job.
            pid (str):
            sid (str):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            SpiderJob
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["jid"] = jid
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        return self.api_projects_spiders_jobs_read_endpoint.call_with_http_info(
            **kwargs
        )
    def api_projects_spiders_jobs_update(self, jid, pid, sid, data, **kwargs):
        """api_projects_spiders_jobs_update  # noqa: E501

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.api_projects_spiders_jobs_update(jid, pid, sid, data, async_req=True)
        >>> result = thread.get()

        Args:
            jid (int): A unique integer value identifying this job.
            pid (str):
            sid (str):
            data (SpiderJobUpdate):

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            SpiderJobUpdate
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs["async_req"] = kwargs.get("async_req", False)
        kwargs["_return_http_data_only"] = kwargs.get("_return_http_data_only", True)
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")
        kwargs["_request_auths"] = kwargs.get("_request_auths", None)
        kwargs["jid"] = jid
        kwargs["pid"] = pid
        kwargs["sid"] = sid
        kwargs["data"] = data
        return self.api_projects_spiders_jobs_update_endpoint.call_with_http_info(
            **kwargs
        )
